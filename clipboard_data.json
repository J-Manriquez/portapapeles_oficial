{
    "groups": {
        "6d3c8fde-efbc-4adf-8a16-95f2f7ffb5f5": {
            "name": "hola",
            "items": [
                {
                    "id": "aaa55d8b-a95a-433b-9923-0748b7fb9c1f",
                    "text": {
                        "text": "\"pinned_items\": {\r\n        \"957baecd-1184-4061-b359-34e3526c6ae8\": {\r\n            \"text\": {\r\n                \"text\": \"return {'text': text, 'formatted': formatted} if text else None\",\r\n                \"formatted\": \"VmVyc2lvbjowLjkNClN0YXJ0SFRNTDowMDAwMDAwMTQ5DQpFbmRIVE1MOjAwMDAwMDI2MTQNClN0YXJ0RnJhZ21lbnQ6MDAwMDAwMDE4NQ0KRW5kRnJhZ21lbnQ6MDAwMDAwMjU3OA0KU291cmNlVVJMOmh0dHBzOi8vYXBwLmFuYWtpbi5haS9hcHBzLzE1MTA4DQo8aHRtbD4NCjxib2R5Pg0KPCEtLVN0YXJ0RnJhZ21lbnQtLT48cHJlIHN0eWxlPSJib3gtc2l6aW5nOiBib3JkZXItYm94OyBzY3JvbGxiYXItY29sb3I6IHZhcigtLXVpLWZpbGwtNikgdHJhbnNwYXJlbnQ7IGZvbnQtc2l6ZTogMTEuMDVweDsgZm9udC1mYW1pbHk6IHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsICZxdW90O1NGIE1vbm8mcXVvdDssIE1lbmxvLCBDb25zb2xhcywgJnF1b3Q7TGliZXJhdGlvbiBNb25vJnF1b3Q7LCBtb25vc3BhY2U7IG1hcmdpbi10b3A6IDBweDsgbWFyZ2luLWJvdHRvbTogMTZweDsgb3ZlcmZsb3c6IGF1dG87IG91dGxpbmU6IG5vbmU7IG92ZXJmbG93LXdyYXA6IG5vcm1hbDsgcGFkZGluZzogMTZweDsgbGluZS1oZWlnaHQ6IDEuNDU7IGJhY2tncm91bmQtY29sb3I6IHZhcigtLXVpLWNvbXBvbmVudC1iYWNrZ3JvdW5kKTsgYm9yZGVyLXJhZGl1czogNnB4OyB3b3JkLWJyZWFrOiBicmVhay1hbGw7IHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTsgZm9udC1zdHlsZTogbm9ybWFsOyBmb250LXZhcmlhbnQtbGlnYXR1cmVzOiBub3JtYWw7IGZvbnQtdmFyaWFudC1jYXBzOiBub3JtYWw7IGZvbnQtd2VpZ2h0OiA0MDA7IGxldHRlci1zcGFjaW5nOiBub3JtYWw7IG9ycGhhbnM6IDI7IHRleHQtYWxpZ246IHN0YXJ0OyB0ZXh0LWluZGVudDogMHB4OyB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgd2lkb3dzOiAyOyB3b3JkLXNwYWNpbmc6IDBweDsgLXdlYmtpdC10ZXh0LXN0cm9rZS13aWR0aDogMHB4OyB0ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzOiBpbml0aWFsOyB0ZXh0LWRlY29yYXRpb24tc3R5bGU6IGluaXRpYWw7IHRleHQtZGVjb3JhdGlvbi1jb2xvcjogaW5pdGlhbDsiPjxjb2RlIGNsYXNzPSJobGpzIGxhbmd1YWdlLXB5dGhvbiIgc3R5bGU9ImJveC1zaXppbmc6IGJvcmRlci1ib3g7IHNjcm9sbGJhci1jb2xvcjogdmFyKC0tdWktZmlsbC02KSB0cmFuc3BhcmVudDsgZm9udC1zaXplOiAxMS4wNXB4OyBmb250LWZhbWlseTogdWktbW9ub3NwYWNlLCBTRk1vbm8tUmVndWxhciwgJnF1b3Q7U0YgTW9ubyZxdW90OywgTWVubG8sIENvbnNvbGFzLCAmcXVvdDtMaWJlcmF0aW9uIE1vbm8mcXVvdDssIG1vbm9zcGFjZTsgb3V0bGluZTogbm9uZTsgY29sb3I6IHZhcigtLWhsanMtY29sb3IpOyBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgcGFkZGluZzogMHB4OyBtYXJnaW46IDBweDsgYm9yZGVyLXJhZGl1czogNnB4OyBkaXNwbGF5OiBpbmxpbmU7IG92ZXJmbG93OiB2aXNpYmxlOyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IHdvcmQtYnJlYWs6IG5vcm1hbDsgYm9yZGVyOiAwcHg7IGxpbmUtaGVpZ2h0OiBpbmhlcml0OyBvdmVyZmxvdy13cmFwOiBub3JtYWw7Ij48c3BhbiBjbGFzcz0iaGxqcy1rZXl3b3JkIiBzdHlsZT0iYm94LXNpemluZzogYm9yZGVyLWJveDsgc2Nyb2xsYmFyLWNvbG9yOiB2YXIoLS11aS1maWxsLTYpIHRyYW5zcGFyZW50OyBvdXRsaW5lOiBub25lOyBjb2xvcjogdmFyKC0taGxqcy1jb2xvci1kb2N0YWcpOyI+cmV0dXJuPC9zcGFuPiB7PHNwYW4gY2xhc3M9ImhsanMtc3RyaW5nIiBzdHlsZT0iYm94LXNpemluZzogYm9yZGVyLWJveDsgc2Nyb2xsYmFyLWNvbG9yOiB2YXIoLS11aS1maWxsLTYpIHRyYW5zcGFyZW50OyBvdXRsaW5lOiBub25lOyBjb2xvcjogdmFyKC0taGxqcy1jb2xvci1tZXRhKTsiPid0ZXh0Jzwvc3Bhbj46IHRleHQsIDxzcGFuIGNsYXNzPSJobGpzLXN0cmluZyIgc3R5bGU9ImJveC1zaXppbmc6IGJvcmRlci1ib3g7IHNjcm9sbGJhci1jb2xvcjogdmFyKC0tdWktZmlsbC02KSB0cmFuc3BhcmVudDsgb3V0bGluZTogbm9uZTsgY29sb3I6IHZhcigtLWhsanMtY29sb3ItbWV0YSk7Ij4nZm9ybWF0dGVkJzwvc3Bhbj46IGZvcm1hdHRlZH0gPHNwYW4gY2xhc3M9ImhsanMta2V5d29yZCIgc3R5bGU9ImJveC1zaXppbmc6IGJvcmRlci1ib3g7IHNjcm9sbGJhci1jb2xvcjogdmFyKC0tdWktZmlsbC02KSB0cmFuc3BhcmVudDsgb3V0bGluZTogbm9uZTsgY29sb3I6IHZhcigtLWhsanMtY29sb3ItZG9jdGFnKTsiPmlmPC9zcGFuPiB0ZXh0IDxzcGFuIGNsYXNzPSJobGpzLWtleXdvcmQiIHN0eWxlPSJib3gtc2l6aW5nOiBib3JkZXItYm94OyBzY3JvbGxiYXItY29sb3I6IHZhcigtLXVpLWZpbGwtNikgdHJhbnNwYXJlbnQ7IG91dGxpbmU6IG5vbmU7IGNvbG9yOiB2YXIoLS1obGpzLWNvbG9yLWRvY3RhZyk7Ij5lbHNlPC9zcGFuPiA8c3BhbiBjbGFzcz0iaGxqcy1saXRlcmFsIiBzdHlsZT0iYm94LXNpemluZzogYm9yZGVyLWJveDsgc2Nyb2xsYmFyLWNvbG9yOiB2YXIoLS11aS1maWxsLTYpIHRyYW5zcGFyZW50OyBvdXRsaW5lOiBub25lOyBjb2xvcjogdmFyKC0taGxqcy1jb2xvci1hdHRyKTsiPk5vbmU8L3NwYW4+PC9jb2RlPjwvcHJlPjwhLS1FbmRGcmFnbWVudC0tPg0KPC9ib2R5Pg0KPC9odG1sPgA=\"\r\n            },\r\n            \"pinned\": true,\r\n            \"with_format\": true\r\n        }\r\n    },",
                        "formatted": "VmVyc2lvbjowLjkNClN0YXJ0SFRNTDowMDAwMDAwMTA1DQpFbmRIVE1MOjAwMDAwMDU1NzMNClN0YXJ0RnJhZ21lbnQ6MDAwMDAwMDE0MQ0KRW5kRnJhZ21lbnQ6MDAwMDAwNTUzNw0KPGh0bWw+DQo8Ym9keT4NCjwhLS1TdGFydEZyYWdtZW50LS0+PGRpdiBzdHlsZT0iY29sb3I6ICNkNGQ0ZDQ7YmFja2dyb3VuZC1jb2xvcjogIzFlMWUxZTtmb250LWZhbWlseTogQ29uc29sYXMsICdDb3VyaWVyIE5ldycsIG1vbm9zcGFjZTtmb250LXdlaWdodDogbm9ybWFsO2ZvbnQtc2l6ZTogMTRweDtsaW5lLWhlaWdodDogMTlweDt3aGl0ZS1zcGFjZTogcHJlOyI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICM5Y2RjZmU7Ij4icGlubmVkX2l0ZW1zIjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNkNGQ0ZDQ7Ij46IHs8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICNkNGQ0ZDQ7Ij4mIzE2MDsgJiMxNjA7ICYjMTYwOyAmIzE2MDsgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzljZGNmZTsiPiI5NTdiYWVjZC0xMTg0LTQwNjEtYjM1OS0zNGUzNTI2YzZhZTgiPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2Q0ZDRkNDsiPjogezwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogI2Q0ZDRkNDsiPiYjMTYwOyAmIzE2MDsgJiMxNjA7ICYjMTYwOyAmIzE2MDsgJiMxNjA7IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICM5Y2RjZmU7Ij4idGV4dCI8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZDRkNGQ0OyI+OiB7PC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZDRkNGQ0OyI+JiMxNjA7ICYjMTYwOyAmIzE2MDsgJiMxNjA7ICYjMTYwOyAmIzE2MDsgJiMxNjA7ICYjMTYwOyA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjOWNkY2ZlOyI+InRleHQiPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2Q0ZDRkNDsiPjogPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2NlOTE3ODsiPiJyZXR1cm4geyd0ZXh0JzogdGV4dCwgJ2Zvcm1hdHRlZCc6IGZvcm1hdHRlZH0gaWYgdGV4dCBlbHNlIE5vbmUiPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2Q0ZDRkNDsiPiw8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICNkNGQ0ZDQ7Ij4mIzE2MDsgJiMxNjA7ICYjMTYwOyAmIzE2MDsgJiMxNjA7ICYjMTYwOyAmIzE2MDsgJiMxNjA7IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICM5Y2RjZmU7Ij4iZm9ybWF0dGVkIjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNkNGQ0ZDQ7Ij46IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNjZTkxNzg7Ij4iVm1WeWMybHZiam93TGprTkNsTjBZWEowU0ZSTlREb3dNREF3TURBd01UUTVEUXBGYm1SSVZFMU1PakF3TURBd01ESTJNVFFOQ2xOMFlYSjBSbkpoWjIxbGJuUTZNREF3TURBd01ERTROUTBLUlc1a1JuSmhaMjFsYm5RNk1EQXdNREF3TWpVM09BMEtVMjkxY21ObFZWSk1PbWgwZEhCek9pOHZZWEJ3TG1GdVlXdHBiaTVoYVM5aGNIQnpMekUxTVRBNERRbzhhSFJ0YkQ0TkNqeGliMlI1UGcwS1BDRXRMVk4wWVhKMFJuSmhaMjFsYm5RdExUNDhjSEpsSUhOMGVXeGxQU0ppYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE95QnpZM0p2Ykd4aVlYSXRZMjlzYjNJNklIWmhjaWd0TFhWcExXWnBiR3d0TmlrZ2RISmhibk53WVhKbGJuUTdJR1p2Ym5RdGMybDZaVG9nTVRFdU1EVndlRHNnWm05dWRDMW1ZVzFwYkhrNklIVnBMVzF2Ym05emNHRmpaU3dnVTBaTmIyNXZMVkpsWjNWc1lYSXNJQ1p4ZFc5ME8xTkdJRTF2Ym04bWNYVnZkRHNzSUUxbGJteHZMQ0JEYjI1emIyeGhjeXdnSm5GMWIzUTdUR2xpWlhKaGRHbHZiaUJOYjI1dkpuRjFiM1E3TENCdGIyNXZjM0JoWTJVN0lHMWhjbWRwYmkxMGIzQTZJREJ3ZURzZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVRad2VEc2diM1psY21ac2IzYzZJR0YxZEc4N0lHOTFkR3hwYm1VNklHNXZibVU3SUc5MlpYSm1iRzkzTFhkeVlYQTZJRzV2Y20xaGJEc2djR0ZrWkdsdVp6b2dNVFp3ZURzZ2JHbHVaUzFvWldsbmFIUTZJREV1TkRVN0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIWmhjaWd0TFhWcExXTnZiWEJ2Ym1WdWRDMWlZV05yWjNKdmRXNWtLVHNnWW05eVpHVnlMWEpoWkdsMWN6b2dObkI0T3lCM2IzSmtMV0p5WldGck9pQmljbVZoYXkxaGJHdzdJSGRvYVhSbExYTndZV05sT2lCd2NtVXRkM0poY0RzZ1kyOXNiM0k2SUhKblltRW9NalUxTENBeU5UVXNJREkxTlN3Z01DNDNLVHNnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzT3lCbWIyNTBMWFpoY21saGJuUXRiR2xuWVhSMWNtVnpPaUJ1YjNKdFlXdzdJR1p2Ym5RdGRtRnlhV0Z1ZEMxallYQnpPaUJ1YjNKdFlXdzdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdJR3hsZEhSbGNpMXpjR0ZqYVc1bk9pQnViM0p0WVd3N0lHOXljR2hoYm5NNklESTdJSFJsZUhRdFlXeHBaMjQ2SUhOMFlYSjBPeUIwWlhoMExXbHVaR1Z1ZERvZ01IQjRPeUIwWlhoMExYUnlZVzV6Wm05eWJUb2dibTl1WlRzZ2QybGtiM2R6T2lBeU95QjNiM0prTFhOd1lXTnBibWM2SURCd2VEc2dMWGRsWW10cGRDMTBaWGgwTFhOMGNtOXJaUzEzYVdSMGFEb2dNSEI0T3lCMFpYaDBMV1JsWTI5eVlYUnBiMjR0ZEdocFkydHVaWE56T2lCcGJtbDBhV0ZzT3lCMFpYaDBMV1JsWTI5eVlYUnBiMjR0YzNSNWJHVTZJR2x1YVhScFlXdzdJSFJsZUhRdFpHVmpiM0poZEdsdmJpMWpiMnh2Y2pvZ2FXNXBkR2xoYkRzaVBqeGpiMlJsSUdOc1lYTnpQU0pvYkdweklHeGhibWQxWVdkbExYQjVkR2h2YmlJZ2MzUjViR1U5SW1KdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdJSE5qY205c2JHSmhjaTFqYjJ4dmNqb2dkbUZ5S0MwdGRXa3RabWxzYkMwMktTQjBjbUZ1YzNCaGNtVnVkRHNnWm05dWRDMXphWHBsT2lBeE1TNHdOWEI0T3lCbWIyNTBMV1poYldsc2VUb2dkV2t0Ylc5dWIzTndZV05sTENCVFJrMXZibTh0VW1WbmRXeGhjaXdnSm5GMWIzUTdVMFlnVFc5dWJ5WnhkVzkwT3l3Z1RXVnViRzhzSUVOdmJuTnZiR0Z6TENBbWNYVnZkRHRNYVdKbGNtRjBhVzl1SUUxdmJtOG1jWFZ2ZERzc0lHMXZibTl6Y0dGalpUc2diM1YwYkdsdVpUb2dibTl1WlRzZ1kyOXNiM0k2SUhaaGNpZ3RMV2hzYW5NdFkyOXNiM0lwT3lCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHNnY0dGa1pHbHVaem9nTUhCNE95QnRZWEpuYVc0NklEQndlRHNnWW05eVpHVnlMWEpoWkdsMWN6b2dObkI0T3lCa2FYTndiR0Y1T2lCcGJteHBibVU3SUc5MlpYSm1iRzkzT2lCMmFYTnBZbXhsT3lCM2FHbDBaUzF6Y0dGalpUb2djSEpsTFhkeVlYQTdJSGR2Y21RdFluSmxZV3M2SUc1dmNtMWhiRHNnWW05eVpHVnlPaUF3Y0hnN0lHeHBibVV0YUdWcFoyaDBPaUJwYm1obGNtbDBPeUJ2ZG1WeVpteHZkeTEzY21Gd09pQnViM0p0WVd3N0lqNDhjM0JoYmlCamJHRnpjejBpYUd4cWN5MXJaWGwzYjNKa0lpQnpkSGxzWlQwaVltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHNnYzJOeWIyeHNZbUZ5TFdOdmJHOXlPaUIyWVhJb0xTMTFhUzFtYVd4c0xUWXBJSFJ5WVc1emNHRnlaVzUwT3lCdmRYUnNhVzVsT2lCdWIyNWxPeUJqYjJ4dmNqb2dkbUZ5S0MwdGFHeHFjeTFqYjJ4dmNpMWtiMk4wWVdjcE95SStjbVYwZFhKdVBDOXpjR0Z1UGlCN1BITndZVzRnWTJ4aGMzTTlJbWhzYW5NdGMzUnlhVzVuSWlCemRIbHNaVDBpWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEc2djMk55YjJ4c1ltRnlMV052Ykc5eU9pQjJZWElvTFMxMWFTMW1hV3hzTFRZcElIUnlZVzV6Y0dGeVpXNTBPeUJ2ZFhSc2FXNWxPaUJ1YjI1bE95QmpiMnh2Y2pvZ2RtRnlLQzB0YUd4cWN5MWpiMnh2Y2kxdFpYUmhLVHNpUGlkMFpYaDBKend2YzNCaGJqNDZJSFJsZUhRc0lEeHpjR0Z1SUdOc1lYTnpQU0pvYkdwekxYTjBjbWx1WnlJZ2MzUjViR1U5SW1KdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdJSE5qY205c2JHSmhjaTFqYjJ4dmNqb2dkbUZ5S0MwdGRXa3RabWxzYkMwMktTQjBjbUZ1YzNCaGNtVnVkRHNnYjNWMGJHbHVaVG9nYm05dVpUc2dZMjlzYjNJNklIWmhjaWd0TFdoc2FuTXRZMjlzYjNJdGJXVjBZU2s3SWo0blptOXliV0YwZEdWa0p6d3ZjM0JoYmo0NklHWnZjbTFoZEhSbFpIMGdQSE53WVc0Z1kyeGhjM005SW1oc2FuTXRhMlY1ZDI5eVpDSWdjM1I1YkdVOUltSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3SUhOamNtOXNiR0poY2kxamIyeHZjam9nZG1GeUtDMHRkV2t0Wm1sc2JDMDJLU0IwY21GdWMzQmhjbVZ1ZERzZ2IzVjBiR2x1WlRvZ2JtOXVaVHNnWTI5c2IzSTZJSFpoY2lndExXaHNhbk10WTI5c2IzSXRaRzlqZEdGbktUc2lQbWxtUEM5emNHRnVQaUIwWlhoMElEeHpjR0Z1SUdOc1lYTnpQU0pvYkdwekxXdGxlWGR2Y21RaUlITjBlV3hsUFNKaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPeUJ6WTNKdmJHeGlZWEl0WTI5c2IzSTZJSFpoY2lndExYVnBMV1pwYkd3dE5pa2dkSEpoYm5Od1lYSmxiblE3SUc5MWRHeHBibVU2SUc1dmJtVTdJR052Ykc5eU9pQjJZWElvTFMxb2JHcHpMV052Ykc5eUxXUnZZM1JoWnlrN0lqNWxiSE5sUEM5emNHRnVQaUE4YzNCaGJpQmpiR0Z6Y3owaWFHeHFjeTFzYVhSbGNtRnNJaUJ6ZEhsc1pUMGlZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZURzZ2MyTnliMnhzWW1GeUxXTnZiRzl5T2lCMllYSW9MUzExYVMxbWFXeHNMVFlwSUhSeVlXNXpjR0Z5Wlc1ME95QnZkWFJzYVc1bE9pQnViMjVsT3lCamIyeHZjam9nZG1GeUtDMHRhR3hxY3kxamIyeHZjaTFoZEhSeUtUc2lQazV2Ym1VOEwzTndZVzQrUEM5amIyUmxQand2Y0hKbFBqd2hMUzFGYm1SR2NtRm5iV1Z1ZEMwdFBnMEtQQzlpYjJSNVBnMEtQQzlvZEcxc1BnQT0iPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZDRkNGQ0OyI+JiMxNjA7ICYjMTYwOyAmIzE2MDsgJiMxNjA7ICYjMTYwOyAmIzE2MDsgfSw8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICNkNGQ0ZDQ7Ij4mIzE2MDsgJiMxNjA7ICYjMTYwOyAmIzE2MDsgJiMxNjA7ICYjMTYwOyA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjOWNkY2ZlOyI+InBpbm5lZCI8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZDRkNGQ0OyI+OiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjNTY5Y2Q2OyI+dHJ1ZTwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNkNGQ0ZDQ7Ij4sPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZDRkNGQ0OyI+JiMxNjA7ICYjMTYwOyAmIzE2MDsgJiMxNjA7ICYjMTYwOyAmIzE2MDsgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzljZGNmZTsiPiJ3aXRoX2Zvcm1hdCI8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZDRkNGQ0OyI+OiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjNTY5Y2Q2OyI+dHJ1ZTwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogI2Q0ZDRkNDsiPiYjMTYwOyAmIzE2MDsgJiMxNjA7ICYjMTYwOyB9PC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZDRkNGQ0OyI+JiMxNjA7ICYjMTYwOyB9LDwvc3Bhbj48L2Rpdj48L2Rpdj48IS0tRW5kRnJhZ21lbnQtLT4NCjwvYm9keT4NCjwvaHRtbD4A"
                    }
                }
            ]
        }
    },
    "pinned_items": {
        "957baecd-1184-4061-b359-34e3526c6ae8": {
            "text": {
                "text": "return {'text': text, 'formatted': formatted} if text else None",
                "formatted": ""
            },
            "pinned": true,
            "with_format": true
        }
    },
    "settings": {
        "height": 400,
        "width": 295,
        "hotkey": "z"
    }
}